name: Node.js Package

on:
  push:
    branches:
    - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  pull-requests: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v2
      with:
        version: 9
    - name: Detect package manager
      id: detect-package-manager
      run: |
        if [ -f "${{ github.workspace }}/yarn.lock" ]; then
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          echo "runner=yarn" >> $GITHUB_OUTPUT
          exit 0
        elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
          echo "manager=npm" >> $GITHUB_OUTPUT
          echo "command=ci" >> $GITHUB_OUTPUT
          echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          exit 0
        elif [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
          echo "manager=pnpm" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          echo "runner=pnpm" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "Unable to determine packager manager"
          exit 1
        fi
    - name: Use Node.js v20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: ${{ steps.detect-package-manager.outputs.manager }}
    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-
    - name: Install dependencies
      run: |
        ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
    - name: Unit Test
      run: |
        ${{ steps.detect-package-manager.outputs.manager }} test
    - name: Build
      run: |
        ${{ steps.detect-package-manager.outputs.manager }} build --filter "@eunchurn/*"
    - name: Creating .npmrc
      run: |
        cat << EOF > "$HOME/.npmrc"
          //registry.npmjs.org/:_authToken=$NPM_TOKEN
        EOF
      env:
        NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    - name: Create Release Pull Request or Publish to npm
      id: changesets
      uses: changesets/action@v1
      with:
        publish: ${{ steps.detect-package-manager.outputs.manager }} run release
        version: ${{ steps.detect-package-manager.outputs.manager }} run version
        commit: 'chore: release package(s)'
        title: 'chore: release package(s)'
      env:
        GITHUB_TOKEN: ${{ secrets.NPM_GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
